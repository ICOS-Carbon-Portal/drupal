<?php

function cp_statistics_theme() {
	$theme['cp_statistics'] = [
			'variables' => ['elements' => null],
			'template' => 'cp_statistics',
	];

	return $theme;
}

function cp_statistics_page_bottom(array &$page_bottom) {
	\Drupal::service('page_cache_kill_switch')->trigger();
	
	$ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
	$page = $_SERVER['REQUEST_URI'];
	$referrer = '';
	if (isset($_SERVER["HTTP_REFERER"])) { $referrer = $_SERVER["HTTP_REFERER"]; }
	$browser = $_SERVER["HTTP_USER_AGENT"];
	$inlogged = 'no';
	if (! \Drupal::currentUser()->isAnonymous()) { $inlogged = 'yes'; }
	$date = new \DateTime();
	
	$body = array(
			"ip" => $ip,
			"page" => $page,
			"referrer" => $referrer,
			"browser" => $browser,
			"inlogged" => $inlogged,
			"timestamp" => $date->getTimestamp(),
			"year" => $date->format('Y'),
			"month" => $date->format('m'),
			"day" => $date->format('d'),
			"clock" => $date->format('H:i:s'),
	);
	
	$settings = \Drupal::config('cp_statistics.settings');
	
	if ($settings->get('settings.internal_or_restheart') == 'internal') {
		cp_statistics_internal($body);
	
	} else if ($settings->get('settings.internal_or_restheart') == 'restheart'
			&& $settings->get('settings.restheart_post_path') != '') { 
				
		cp_statistics_restheart($body, $settings->get('settings.restheart_post_path')); 
	}
	
	$page_bottom['cp_statistics'] = ['#markup' => ''];
}

function cp_statistics_internal($body) {
	$db = \Drupal::service('database');
	$exists = $db->query('show tables like \'cp_statistics_visit\'')->fetchAll();

	if ($exists) {

		$insert = $db->insert('cp_statistics_visit');
		$insert->fields(array(
				'ip' => $body['ip'],
				'page' => $body['page'],
				'referrer' => $body['referrer'],
				'browser' => $body['browser'],
				'inlogged' => $body['inlogged'],
				'timestamp' => $body['timestamp'],
				'year' => $body['year'],
				'month' => $body['month'],
				'day' => $body['day'],
				'clock' => $body['clock']
		))->execute();
	}
}

function cp_statistics_restheart($body, $restheart_path) {
	
	$curl = curl_init($restheart_path);
	curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "post");
	curl_setopt($curl, CURLOPT_HEADER, false);
	curl_setopt($curl, CURLOPT_HTTPHEADER, array("Content-Type: application/json"));
	curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($curl, CURLOPT_POSTFIELDS, json_encode($body));
	
	if (! curl_exec($curl)) {
		\Drupal::logger('cp_statistics')->notice('CURL: ' . curl_error($curl));
	}
	
	curl_close($curl);
}

function cp_statistics_cron() {
	$settings = \Drupal::config('cp_statistics.settings');

	if ($settings->get('settings.internal_or_restheart') == 'internal') {
		cp_statistics_internal_update_position();
	
	
	} else if ($settings->get('settings.internal_or_restheart') != 'restheart'
			&& $settings->get('settings.restheart_get_path') != ''
			&& $settings->get('settings.restheart_post_path') != '') {
		
	}
}

function cp_statistics_internal_update_position() {
	$db = \Drupal::service('database');
	$exists = $db->query('show tables like \'cp_statistics_visit\'')->fetchAll();
	
	if ($exists) {
		$date = new \DateTime();
		\Drupal::logger('cp_statistics')->notice('Cron job: ' . $date->format('Y-m-d H:i:s'));
		
		$result = $db->query('select id, ip, country_code from cp_statistics_visit')->fetchAll();
		
		$list = [];
		
		if (! empty($result)) {
			foreach ($result as $row) {
				if ($row->country_code == '') {
					$list[] = array('id' => $row->id, 'ip' => $row->ip);
				}
			}
		}
		
		if (! empty($list)) {
			$co_limit = 10000;
			$co = 1;
			
			foreach ($list as $item) {
				$id = $item['id'];
				$ip = $item['ip'];
				
				if ($co < $co_limit) {
					$geolocationSrc = file_get_contents("http://freegeoip.net/json/$ip");	
					$geolocation = (json_decode($geolocationSrc, true));
					
					if (! empty($geolocation)) {
						$code = $geolocation['country_code'];
						$lat = $geolocation['latitude'];
						$lon = $geolocation['longitude'];
						
						$update = $db->update('cp_statistics_visit');
						$update->condition('id', $id);
						$update->fields(['country_code' => $code, 'lat' => $lat, 'lon' => $lon]);
						$update->execute();
						
						$co ++;
					}
				}
			}
		}
	}
}
